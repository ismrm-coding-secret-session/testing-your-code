# vim ft=yaml
# travis-ci.org definition for MOxUnit build (based on CoSMoMVPA,
# which is based on PyMVPA, which is based on nipype configuration, 
# which in turn was based on nipy)
#
# We pretend to be java because we need GNU Octave which is not
# available (as of April 2015) 

language: java

cache:

  apt: true # Not working for public repos :( 
  directories:
  # Following directories will be generated 
  - "$HOME/octave"
env:
  global:
  - OCTAVE=octave
before_install:
# to prevent IPv6 being used for APT
- travis_retry sudo apt-get -y -qq update
- travis_retry sudo apt-get install -y -qq software-properties-common python-software-properties
- travis_retry sudo apt-add-repository -y ppa:octave/stable
- travis_retry sudo apt-get -y -qq update
- travis_retry sudo apt-get install -y wget
- travis_retry sudo apt-get -y -qq install octave liboctave-dev octave-pkg-dev
# Please comment in following section if you need to update packages or add a new one
# If following section is going to be commented in, please set cacheState to false in startup.m
# --------------
#- travis_retry wget -O /home/travis/octave/OctavePackages.zip https://osf.io/t465n/download
#- unzip /home/travis/octave/OctavePackages.zip
- travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/struct-1.0.14.tar.gz -P /home/travis/octave
- travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/statistics-1.3.0.tar.gz -P /home/travis/octave
- travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/optim-1.5.2.tar.gz -P /home/travis/octave
- travis_retry wget https://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/io-2.4.10.tar.gz -P /home/travis/octave
- travis_retry wget http://sourceforge.net/projects/octave/files/Octave%20Forge%20Packages/Individual%20Package%20Releases/image-2.6.1.tar.gz -P /home/travis/octave
# --------------
- make -C external/MOcov install
- pip install --user awscli
jobs:
  include:
  - stage: Test
    script: if travis_wait 30 octave --no-gui --eval "startup;cd('/home/travis/build/ismrm-coding-secret-session/testing-your-code/tests/testing-your-code/math/');res=moxunit_runtests('-recursive','-with_coverage','-cover','/home/travis/build/ismrm-coding-secret-session/testing-your-code/testing-your-code','-cover_json_file','coverage_math.json');exit(~res);"; then aws s3 cp /home/travis/build/ismrm-coding-secret-session/testing-your-code/tests/math/coverage_math.json s3://testing-your-code/$TRAVIS_BUILD_NUMBER/coverage_math.json || travis_terminate 1; else travis_terminate 1; fi
  - stage: Send combined coveralls.io report
    script: aws s3 cp s3://testing-your-code/$TRAVIS_BUILD_NUMBER/ /home/travis/build/ismrm-coding-secret-session/testing-your-code/tests/ --recursive --include "*.json";octave --no-gui --eval "startup;cd('/home/travis/build/ismrm-coding-secret-session/testing-your-code/');startup;mocov_combine('/home/travis/build/ismrm-coding-secret-session/testing-your-code/tests/','coverage_combined.json')";aws s3 cp /home/travis/build/ismrm-coding-secret-session/testing-your-code/tests/coverage_combined.json s3://testing-your-code/$TRAVIS_BUILD_NUMBER/coverage_combined.json;curl --verbose -F json_file=@/home/travis/build/ismrm-coding-secret-session/testing-your-code/tests/coverage_combined.json https://coveralls.io/api/v1/jobs

after_failure:
  - sleep 10